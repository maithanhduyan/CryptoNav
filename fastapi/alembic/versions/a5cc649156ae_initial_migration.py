"""Initial migration

Revision ID: a5cc649156ae
Revises: 
Create Date: 2025-03-16 02:50:31.120777

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a5cc649156ae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_price_history_asset_id', table_name='price_history')
    op.drop_index('ix_price_history_id', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index('ix_items_id', table_name='items')
    op.drop_table('items')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_portfolio_id', table_name='portfolio')
    op.drop_index('ix_portfolio_user_id', table_name='portfolio')
    op.drop_table('portfolio')
    op.drop_index('ix_asset_id', table_name='asset')
    op.drop_index('ix_asset_symbol', table_name='asset')
    op.drop_table('asset')
    op.drop_index('ix_transaction_asset_id', table_name='transaction')
    op.drop_index('ix_transaction_id', table_name='transaction')
    op.drop_index('ix_transaction_portfolio_id', table_name='transaction')
    op.drop_table('transaction')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('transaction_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='transaction_asset_id_fkey'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], name='transaction_portfolio_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transaction_pkey')
    )
    op.create_index('ix_transaction_portfolio_id', 'transaction', ['portfolio_id'], unique=False)
    op.create_index('ix_transaction_id', 'transaction', ['id'], unique=False)
    op.create_index('ix_transaction_asset_id', 'transaction', ['asset_id'], unique=False)
    op.create_table('asset',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('asset_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='asset_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_asset_symbol', 'asset', ['symbol'], unique=True)
    op.create_index('ix_asset_id', 'asset', ['id'], unique=False)
    op.create_table('portfolio',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='portfolio_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='portfolio_pkey')
    )
    op.create_index('ix_portfolio_user_id', 'portfolio', ['user_id'], unique=False)
    op.create_index('ix_portfolio_id', 'portfolio', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='items_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='items_pkey')
    )
    op.create_index('ix_items_id', 'items', ['id'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('open_price', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=True),
    sa.Column('close_price', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=True),
    sa.Column('high_price', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=True),
    sa.Column('low_price', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='price_history_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='price_history_pkey')
    )
    op.create_index('ix_price_history_id', 'price_history', ['id'], unique=False)
    op.create_index('ix_price_history_asset_id', 'price_history', ['asset_id'], unique=False)
    # ### end Alembic commands ###
