// This file is auto-generated by @hey-api/openapi-ts

export type AssetCreate = {
    symbol: string;
    name: string;
    description?: string | null;
};

export type AssetResponse = {
    symbol: string;
    name: string;
    description?: string | null;
    id: number;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type PortfolioBase = {
    name: string;
    description?: string | null;
};

export type PortfolioCreate = {
    name: string;
    description?: string | null;
    user_id: number;
};

export type PortfolioResponse = {
    name: string;
    description?: string | null;
    id: number;
    user_id: number;
    created_at: string;
};

export type PriceHistoryCreate = {
    asset_id: number;
    date: string;
    open_price?: number | null;
    close_price?: number | null;
    high_price?: number | null;
    low_price?: number | null;
};

export type PriceHistoryResponse = {
    asset_id: number;
    date: string;
    open_price?: number | null;
    close_price?: number | null;
    high_price?: number | null;
    low_price?: number | null;
    id: number;
};

export type TransactionCreate = {
    portfolio_id: number;
    asset_id: number;
    quantity: number;
    price: number;
    transaction_type: string;
    transaction_date?: string | null;
};

export type TransactionResponse = {
    portfolio_id: number;
    asset_id: number;
    quantity: number;
    price: number;
    transaction_type: string;
    transaction_date?: string | null;
    id: number;
};

export type UserCreate = {
    username: string;
    email: string;
    password: string;
};

export type UserResponse = {
    username: string;
    email: string;
    id: number;
    is_active: boolean;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterUserUsersRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/users/register';
};

export type RegisterUserUsersRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserUsersRegisterPostError = RegisterUserUsersRegisterPostErrors[keyof RegisterUserUsersRegisterPostErrors];

export type RegisterUserUsersRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: UserResponse;
};

export type RegisterUserUsersRegisterPostResponse = RegisterUserUsersRegisterPostResponses[keyof RegisterUserUsersRegisterPostResponses];

export type LoginUsersLoginPostData = {
    body?: never;
    path?: never;
    query: {
        username: string;
        password: string;
    };
    url: '/users/login';
};

export type LoginUsersLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginUsersLoginPostError = LoginUsersLoginPostErrors[keyof LoginUsersLoginPostErrors];

export type LoginUsersLoginPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteUserUsersMeDeleteData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type DeleteUserUsersMeDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteUserUsersMeDeleteResponse = DeleteUserUsersMeDeleteResponses[keyof DeleteUserUsersMeDeleteResponses];

export type ReadCurrentUserUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type ReadCurrentUserUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type ReadCurrentUserUsersMeGetResponse = ReadCurrentUserUsersMeGetResponses[keyof ReadCurrentUserUsersMeGetResponses];

export type UpdateUserUsersMePutData = {
    body?: never;
    path?: never;
    query?: {
        email?: string;
        password?: string;
    };
    url: '/users/me';
};

export type UpdateUserUsersMePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserUsersMePutError = UpdateUserUsersMePutErrors[keyof UpdateUserUsersMePutErrors];

export type UpdateUserUsersMePutResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type UpdateUserUsersMePutResponse = UpdateUserUsersMePutResponses[keyof UpdateUserUsersMePutResponses];

export type ReadUsersUsersGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/users/';
};

export type ReadUsersUsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadUsersUsersGetError = ReadUsersUsersGetErrors[keyof ReadUsersUsersGetErrors];

export type ReadUsersUsersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<UserResponse>;
};

export type ReadUsersUsersGetResponse = ReadUsersUsersGetResponses[keyof ReadUsersUsersGetResponses];

export type ReadUserUsersUserIdGetData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type ReadUserUsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadUserUsersUserIdGetError = ReadUserUsersUserIdGetErrors[keyof ReadUserUsersUserIdGetErrors];

export type ReadUserUsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type ReadUserUsersUserIdGetResponse = ReadUserUsersUserIdGetResponses[keyof ReadUserUsersUserIdGetResponses];

export type ReadAssetsAssetsGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/assets/';
};

export type ReadAssetsAssetsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadAssetsAssetsGetError = ReadAssetsAssetsGetErrors[keyof ReadAssetsAssetsGetErrors];

export type ReadAssetsAssetsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AssetResponse>;
};

export type ReadAssetsAssetsGetResponse = ReadAssetsAssetsGetResponses[keyof ReadAssetsAssetsGetResponses];

export type CreateAssetAssetsPostData = {
    body: AssetCreate;
    path?: never;
    query?: never;
    url: '/assets/';
};

export type CreateAssetAssetsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateAssetAssetsPostError = CreateAssetAssetsPostErrors[keyof CreateAssetAssetsPostErrors];

export type CreateAssetAssetsPostResponses = {
    /**
     * Successful Response
     */
    201: AssetResponse;
};

export type CreateAssetAssetsPostResponse = CreateAssetAssetsPostResponses[keyof CreateAssetAssetsPostResponses];

export type DeleteAssetAssetsAssetIdDeleteData = {
    body?: never;
    path: {
        asset_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}';
};

export type DeleteAssetAssetsAssetIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAssetAssetsAssetIdDeleteError = DeleteAssetAssetsAssetIdDeleteErrors[keyof DeleteAssetAssetsAssetIdDeleteErrors];

export type DeleteAssetAssetsAssetIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteAssetAssetsAssetIdDeleteResponse = DeleteAssetAssetsAssetIdDeleteResponses[keyof DeleteAssetAssetsAssetIdDeleteResponses];

export type ReadAssetAssetsAssetIdGetData = {
    body?: never;
    path: {
        asset_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}';
};

export type ReadAssetAssetsAssetIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadAssetAssetsAssetIdGetError = ReadAssetAssetsAssetIdGetErrors[keyof ReadAssetAssetsAssetIdGetErrors];

export type ReadAssetAssetsAssetIdGetResponses = {
    /**
     * Successful Response
     */
    200: AssetResponse;
};

export type ReadAssetAssetsAssetIdGetResponse = ReadAssetAssetsAssetIdGetResponses[keyof ReadAssetAssetsAssetIdGetResponses];

export type UpdateAssetAssetsAssetIdPutData = {
    body: AssetCreate;
    path: {
        asset_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}';
};

export type UpdateAssetAssetsAssetIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateAssetAssetsAssetIdPutError = UpdateAssetAssetsAssetIdPutErrors[keyof UpdateAssetAssetsAssetIdPutErrors];

export type UpdateAssetAssetsAssetIdPutResponses = {
    /**
     * Successful Response
     */
    200: AssetResponse;
};

export type UpdateAssetAssetsAssetIdPutResponse = UpdateAssetAssetsAssetIdPutResponses[keyof UpdateAssetAssetsAssetIdPutResponses];

export type ReadPriceHistoryAssetsAssetIdPriceHistoryGetData = {
    body?: never;
    path: {
        asset_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}/price-history';
};

export type ReadPriceHistoryAssetsAssetIdPriceHistoryGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadPriceHistoryAssetsAssetIdPriceHistoryGetError = ReadPriceHistoryAssetsAssetIdPriceHistoryGetErrors[keyof ReadPriceHistoryAssetsAssetIdPriceHistoryGetErrors];

export type ReadPriceHistoryAssetsAssetIdPriceHistoryGetResponses = {
    /**
     * Successful Response
     */
    200: Array<PriceHistoryResponse>;
};

export type ReadPriceHistoryAssetsAssetIdPriceHistoryGetResponse = ReadPriceHistoryAssetsAssetIdPriceHistoryGetResponses[keyof ReadPriceHistoryAssetsAssetIdPriceHistoryGetResponses];

export type CreatePriceHistoryAssetsAssetIdPriceHistoryPostData = {
    body: PriceHistoryCreate;
    path: {
        asset_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}/price-history';
};

export type CreatePriceHistoryAssetsAssetIdPriceHistoryPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePriceHistoryAssetsAssetIdPriceHistoryPostError = CreatePriceHistoryAssetsAssetIdPriceHistoryPostErrors[keyof CreatePriceHistoryAssetsAssetIdPriceHistoryPostErrors];

export type CreatePriceHistoryAssetsAssetIdPriceHistoryPostResponses = {
    /**
     * Successful Response
     */
    201: PriceHistoryResponse;
};

export type CreatePriceHistoryAssetsAssetIdPriceHistoryPostResponse = CreatePriceHistoryAssetsAssetIdPriceHistoryPostResponses[keyof CreatePriceHistoryAssetsAssetIdPriceHistoryPostResponses];

export type DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteData = {
    body?: never;
    path: {
        asset_id: number;
        price_history_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}/price-history/{price_history_id}';
};

export type DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteError = DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteErrors[keyof DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteErrors];

export type DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteResponse = DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteResponses[keyof DeletePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdDeleteResponses];

export type UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutData = {
    body: PriceHistoryCreate;
    path: {
        asset_id: number;
        price_history_id: number;
    };
    query?: never;
    url: '/assets/{asset_id}/price-history/{price_history_id}';
};

export type UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutError = UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutErrors[keyof UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutErrors];

export type UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutResponses = {
    /**
     * Successful Response
     */
    200: PriceHistoryResponse;
};

export type UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutResponse = UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutResponses[keyof UpdatePriceHistoryAssetsAssetIdPriceHistoryPriceHistoryIdPutResponses];

export type CreatePortfolioPortfoliosPostData = {
    body: PortfolioCreate;
    path?: never;
    query?: never;
    url: '/portfolios/';
};

export type CreatePortfolioPortfoliosPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePortfolioPortfoliosPostError = CreatePortfolioPortfoliosPostErrors[keyof CreatePortfolioPortfoliosPostErrors];

export type CreatePortfolioPortfoliosPostResponses = {
    /**
     * Successful Response
     */
    201: PortfolioResponse;
};

export type CreatePortfolioPortfoliosPostResponse = CreatePortfolioPortfoliosPostResponses[keyof CreatePortfolioPortfoliosPostResponses];

export type DeletePortfolioPortfoliosPortfolioIdDeleteData = {
    body?: never;
    path: {
        portfolio_id: number;
    };
    query?: never;
    url: '/portfolios/{portfolio_id}';
};

export type DeletePortfolioPortfoliosPortfolioIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePortfolioPortfoliosPortfolioIdDeleteError = DeletePortfolioPortfoliosPortfolioIdDeleteErrors[keyof DeletePortfolioPortfoliosPortfolioIdDeleteErrors];

export type DeletePortfolioPortfoliosPortfolioIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeletePortfolioPortfoliosPortfolioIdDeleteResponse = DeletePortfolioPortfoliosPortfolioIdDeleteResponses[keyof DeletePortfolioPortfoliosPortfolioIdDeleteResponses];

export type ReadPortfolioPortfoliosPortfolioIdGetData = {
    body?: never;
    path: {
        portfolio_id: number;
    };
    query?: never;
    url: '/portfolios/{portfolio_id}';
};

export type ReadPortfolioPortfoliosPortfolioIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadPortfolioPortfoliosPortfolioIdGetError = ReadPortfolioPortfoliosPortfolioIdGetErrors[keyof ReadPortfolioPortfoliosPortfolioIdGetErrors];

export type ReadPortfolioPortfoliosPortfolioIdGetResponses = {
    /**
     * Successful Response
     */
    200: PortfolioResponse;
};

export type ReadPortfolioPortfoliosPortfolioIdGetResponse = ReadPortfolioPortfoliosPortfolioIdGetResponses[keyof ReadPortfolioPortfoliosPortfolioIdGetResponses];

export type UpdatePortfolioPortfoliosPortfolioIdPutData = {
    body: PortfolioBase;
    path: {
        portfolio_id: number;
    };
    query?: never;
    url: '/portfolios/{portfolio_id}';
};

export type UpdatePortfolioPortfoliosPortfolioIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePortfolioPortfoliosPortfolioIdPutError = UpdatePortfolioPortfoliosPortfolioIdPutErrors[keyof UpdatePortfolioPortfoliosPortfolioIdPutErrors];

export type UpdatePortfolioPortfoliosPortfolioIdPutResponses = {
    /**
     * Successful Response
     */
    200: PortfolioResponse;
};

export type UpdatePortfolioPortfoliosPortfolioIdPutResponse = UpdatePortfolioPortfoliosPortfolioIdPutResponses[keyof UpdatePortfolioPortfoliosPortfolioIdPutResponses];

export type ReadUserPortfoliosPortfoliosMyPortfoliosGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/portfolios/my-portfolios';
};

export type ReadUserPortfoliosPortfoliosMyPortfoliosGetResponses = {
    /**
     * Successful Response
     */
    200: Array<PortfolioResponse>;
};

export type ReadUserPortfoliosPortfoliosMyPortfoliosGetResponse = ReadUserPortfoliosPortfoliosMyPortfoliosGetResponses[keyof ReadUserPortfoliosPortfoliosMyPortfoliosGetResponses];

export type CreateTransactionTransactionsPostData = {
    body: TransactionCreate;
    path?: never;
    query?: never;
    url: '/transactions/';
};

export type CreateTransactionTransactionsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTransactionTransactionsPostError = CreateTransactionTransactionsPostErrors[keyof CreateTransactionTransactionsPostErrors];

export type CreateTransactionTransactionsPostResponses = {
    /**
     * Successful Response
     */
    201: TransactionResponse;
};

export type CreateTransactionTransactionsPostResponse = CreateTransactionTransactionsPostResponses[keyof CreateTransactionTransactionsPostResponses];

export type DeleteTransactionTransactionsTransactionIdDeleteData = {
    body?: never;
    path: {
        transaction_id: number;
    };
    query?: never;
    url: '/transactions/{transaction_id}';
};

export type DeleteTransactionTransactionsTransactionIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTransactionTransactionsTransactionIdDeleteError = DeleteTransactionTransactionsTransactionIdDeleteErrors[keyof DeleteTransactionTransactionsTransactionIdDeleteErrors];

export type DeleteTransactionTransactionsTransactionIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteTransactionTransactionsTransactionIdDeleteResponse = DeleteTransactionTransactionsTransactionIdDeleteResponses[keyof DeleteTransactionTransactionsTransactionIdDeleteResponses];

export type ReadTransactionTransactionsTransactionIdGetData = {
    body?: never;
    path: {
        transaction_id: number;
    };
    query?: never;
    url: '/transactions/{transaction_id}';
};

export type ReadTransactionTransactionsTransactionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadTransactionTransactionsTransactionIdGetError = ReadTransactionTransactionsTransactionIdGetErrors[keyof ReadTransactionTransactionsTransactionIdGetErrors];

export type ReadTransactionTransactionsTransactionIdGetResponses = {
    /**
     * Successful Response
     */
    200: TransactionResponse;
};

export type ReadTransactionTransactionsTransactionIdGetResponse = ReadTransactionTransactionsTransactionIdGetResponses[keyof ReadTransactionTransactionsTransactionIdGetResponses];

export type UpdateTransactionTransactionsTransactionIdPutData = {
    body: TransactionCreate;
    path: {
        transaction_id: number;
    };
    query?: never;
    url: '/transactions/{transaction_id}';
};

export type UpdateTransactionTransactionsTransactionIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateTransactionTransactionsTransactionIdPutError = UpdateTransactionTransactionsTransactionIdPutErrors[keyof UpdateTransactionTransactionsTransactionIdPutErrors];

export type UpdateTransactionTransactionsTransactionIdPutResponses = {
    /**
     * Successful Response
     */
    200: TransactionResponse;
};

export type UpdateTransactionTransactionsTransactionIdPutResponse = UpdateTransactionTransactionsTransactionIdPutResponses[keyof UpdateTransactionTransactionsTransactionIdPutResponses];

export type TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetData = {
    body?: never;
    path: {
        portfolio_id: number;
    };
    query?: never;
    url: '/transactions/portfolio/{portfolio_id}';
};

export type TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetError = TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetErrors[keyof TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetErrors];

export type TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetResponses = {
    /**
     * Successful Response
     */
    200: Array<TransactionResponse>;
};

export type TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetResponse = TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetResponses[keyof TransactionsByPortfolioTransactionsPortfolioPortfolioIdGetResponses];

export type ClientOptions = {
    baseUrl: 'http://cryptonav_api:8000' | (string & {});
};